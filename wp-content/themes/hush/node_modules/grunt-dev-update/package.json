{
  "name": "grunt-dev-update",
  "version": "0.4.7",
  "description": "Automate the updating of your package.json packages with a grunt task",
  "homepage": "https://github.com/pgilad/grunt-dev-update",
  "bugs": {
    "url": "https://github.com/pgilad/grunt-dev-update/issues"
  },
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com"
  },
  "keywords": [
    "gruntplugin",
    "devDependencies",
    "dependencies",
    "install",
    "save-dev",
    "save",
    "automation",
    "updates"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pgilad/grunt-dev-update"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-nodeunit": "~0.3.0",
    "grunt-contrib-clean": "~0.5.0",
    "jshint-stylish": "~0.1.5"
  },
  "dependencies": {
    "matchdep": "~0.3.0",
    "async": "~0.2.10",
    "lodash": "~2.4.1",
    "inquirer": "~0.4.0",
    "findup-sync": "~0.1.2",
    "progress": "~1.1.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# [grunt](http://gruntjs.com/)-dev-update\n> Automate the updating of your package.json packages with a grunt task\n\n[![NPM Version](http://img.shields.io/npm/v/grunt-dev-update.svg)](https://npmjs.org/package/grunt-dev-update)\n[![Gittip](http://img.shields.io/gittip/pgilad.svg)](https://www.gittip.com/pgilad/)\n[![Dependencies](http://img.shields.io/gemnasium/pgilad/grunt-dev-update.svg)](https://gemnasium.com/pgilad/grunt-dev-update)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n\n## Getting Started\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-dev-update --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-dev-update');\n```\n\nAn alternative and highly recommended way to load all grunt npm tasks is installing `matchdep`:\n```js\nnpm install matchdep --save-dev\n```\n\nAnd then add to your grunt file:\n```js\nrequire('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n```\n\n\n***\n\n## The \"devUpdate\" task\n\n### Overview\nIn your project's Gruntfile, add a task config named `devUpdate` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n    devUpdate: {\n        your_target: {\n            options: {\n            // Target specific options go here\n            }\n        }\n    }\n})\n```\n\n### Options\n\n#### options.reportUpdated\nType: `Boolean`\nDefault value: `false`\n\nWhether to report an already updated package\n\n#### options.updateType\nType: `String`\nDefault value: `report`\n\nHow devUpdate should handle the outdated packages. Valid options:\n\n* `report` - Just report that the package is outdated.\n* `prompt` - Prompt user to confirm update of every package\n* `force` - Automatically force the update for the outdated packages.\n\n#### options.packages\nType: `Object`\nDefault value: `{devDependencies: true}`\n\nWhat kind of packages should be checked. Valid options:\n\n* `dependencies` - Specify true to check **production dependencies**.\n\n    > Outdated **dependencies** are installed using the `--save` option.\n\n* `devDependencies` - Specify true to check **development dependencies**. This is **true** by default.\n\n    > Outdated **devDependencies** are installed using the `--save-dev` option.\n\n#### options.packageJson\nType: `null|Object|String`\nDefault value: `null`\n\nThis option allow you to manully configure the path of your **package.json**. Valid options:\n\n* `null` - This will use `matchdep` own logic for finding your package.json (using `findup` to find\nnearest package.json). This is the recommended and default option.\n* `String` - specify a relative path from your **process.cwd()** to find your package.json.\n* `Object` - pass in an object representing your package.json\n\nFor better understanding the `String` and `Object` option, please see [matchdep config](https://github.com/tkellen/node-matchdep#config).\n\n### Usage Examples\n\n#### Default Options\nExample usage with all options specified with defaults:\n\n```js\ngrunt.initConfig({\n    devUpdate: {\n        main: {\n            options: {\n                //just report\n                updateType: 'report',\n                //don't report ok packages by default\n                reportUpdated: false,\n                //what packages to check\n                packages: {\n                    //only devDependencies by default\n                    devDependencies: true,\n                    dependencies: false\n                },\n                //by deafult - use matchdep default findup to locate package.json\n                packageJson: null\n            }\n        }\n    }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## License\nCopyright (c) 2014 Gilad Peleg. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-dev-update@0.4.7",
  "_shasum": "f2047cb8426f788b7c11b303f90fb055da69f1b3",
  "_from": "grunt-dev-update@~0.4.5",
  "_resolved": "https://registry.npmjs.org/grunt-dev-update/-/grunt-dev-update-0.4.7.tgz"
}
